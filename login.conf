{
	view = {
		LoginForm = Template(f"templates/LoginForm.html");
		LoginFail = Template(f"templates/LoginFail.html");
		RegisterForm = Template(f"templates/RegisterForm.html");
		RegisterFail = Template(f"templates/RegisterFail.html");
		usernamenotunique = Template(f"templates/usernamenotunique.html") {
			form->view.RegisterForm;
		};
		userfail = Template(f"templates/userfail.html");
		passwordfail = Template(f"templates/passwordfail.html");
		checkfail = Template(f"templates/checkfail.html");
		passwordmismatch = Template(f"templates/passwordmismatch.html") {
			form->view.RegisterForm;
		};
	};

	instances = {
		identify = PostFieldReader(
			field_username = "^[\\w|0-9|-|_]+$",
			field_password = "^.{1,250}$"
		) {
			form->views.LoginForm;
			successful->DataReader(f"queries/GetLoginByCredentials.sql") {
				none->views.LoginFail;
				single->Return("identified");
			};
		};	

		createaccount = DataReader(f"queries/Get Login by username.auto.sql") {
			none->DataReader(f"queries/AddLoginCredentials.sql") {
				none->views.RegisterFail;
				single->Return("done");			
			};
			single->views.usernamenotunique;
		};

		create = PostFieldReader(
			field_username = "^[\\w|0-9|-|_]+$",
			field_password = "^.{8,250}$",
			field_repeatpassword = "^.{0,250}$",
			field_check = "^green$",
			maperrors = true
		) {
			username_failure->views.userfail;
			password_failure->views.passwordfail;
			check_failure->views.checkfail;
			form->views.RegisterForm;
			successful->Equals("password", to="repeatpassword") {
				successful->instances.createaccount;
				failure->Log("nope") {
					continue->views.passwordmismatch;
				};
			};
		};
	};
}